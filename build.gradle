apply plugin: 'idea'


buildscript {
    repositories {
        mavenLocal()
        mavenRepo url: 'http://evgenyg.artifactoryonline.com/evgenyg/repo/'
    }
    dependencies {
        classpath 'com.github.goldin.plugins:teamcity:0.1.4-SNAPSHOT'
    }
}


ext.codenarcRuleSetFiles = [ 'codenarc.groovy' ]
ext.codenarcSources      = project.subprojects*.name.collect{[ "$it/src/main/groovy", "$it/src/test/groovy" ]}.flatten()
apply from: 'https://raw.github.com/evgeny-goldin/gradle-plugins/master/src/main/groovy/CodeNarc.gradle'


idea.project {
    jdkName = '1.6'
    ipr.withXml { provider -> provider.node.component.find { it.@name == 'VcsDirectoryMappings' }.mapping.@vcs = 'Git' }
}



defaultTasks 'clean', 'codenarc', 'build', 'assembleTeamcityPlugin', 'install'


subprojects {

    Project p ->

    apply plugin: 'groovy'
    apply plugin: 'idea'
    apply plugin: 'maven'
    apply from: 'https://raw.github.com/evgeny-goldin/gradle-plugins/master/teamcity/teamcity.gradle'

    group                = 'com.github.goldin.teamcity'
    version              = '0.1-SNAPSHOT'
    sourceCompatibility  = 1.6
    targetCompatibility  = 1.6

    repositories   { mavenCentral() }

    configurations { compile { extendsFrom teamcityServer }}

    dependencies   {
        groovy      localGroovy()
        compile     ( "org.gcontracts:gcontracts-core:1.2.5" ) { exclude group: 'junit' }
        compile     'commons-logging:commons-logging-api:1.1'
        testCompile ( "org.spockframework:spock-core:0.6-groovy-1.8" )       { exclude group: 'org.codehaus.groovy'  }
        testCompile "org.spockframework:spock-spring:0.6-groovy-1.8",
                    "org.springframework:spring-test:3.0.5.RELEASE",
                    "org.apache.ant:ant:1.8.4",
                    "junit:junit:4.10",
                    "log4j:log4j:1.2.17",
                    'com.google.guava:guava:13.0'
    }


    clean { delete( "$rootDir/out", "$rootDir/build" ) }


    idea.module {
        downloadSources = true
        downloadJavadoc = false
    }


    assembleTeamcityPlugin.dependsOn jar, test
    assembleTeamcityPluginConfig {
        vendorName   'Evgeny Goldin'
        vendorUrl    'http://evgeny-goldin.com'
        server       p
        artifacts    p
    }


    /**
      * Copies all plugin archives into ".BuildServer/plugins"
      */
     task cp( dependsOn: assembleTeamcityPlugin ) << {

         final pluginsDir = "${ System.getProperty( 'user.home' )}/.BuildServer/plugins"
         final archive    = assembleTeamcityPlugin.archive

         delete( "$pluginsDir/$archive.name" )
         copy { from archive; into pluginsDir }
     }
}


project( ':messenger' ) {
    assembleTeamcityPluginConfig {
        displayName 'Messenger Plugin'
        description 'Plugin for sending messages between TeamCity users'
    }
}


project( ':github' ) {
    assembleTeamcityPluginConfig {
        displayName 'GitHub Plugin'
        description 'Plugin for integrating TeamCity with GitHub issue tracker'
    }
}


project( ':report' ) {
    assembleTeamcityPluginConfig {
        displayName 'Reporting Plugin'
        description 'Plugin displaying Spring context content'
    }
}


task wrapper( type: Wrapper ) { gradleVersion = '1.1' }
