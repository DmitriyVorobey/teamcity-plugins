allprojects {
    apply plugin: 'idea'
    apply plugin: 'groovy'
    apply plugin: 'maven'

    group               = 'com.goldin.teamcity'
    version             = '0.0.1-SNAPSHOT'
    sourceCompatibility = 1.6
    teamCityDir         = 'T:/'

    defaultTasks 'clean', 'build', 'install'
}


subprojects {

    destinationDir = tasks[ 'jar' ].destinationDir
    destinationZip = new File( destinationDir, "${project.name}.zip" )
    teamCityZip    = new File( teamCityDir, "webapps/ROOT/WEB-INF/plugins/${project.name}.zip" )

    repositories { mavenRepo urls: 'http://evgeny-goldin.org/artifactory/repo/' }
    dependencies {
        groovy  'org.codehaus.groovy:groovy-all:1.8.0'
        compile 'jetbrains:teamcity-openapi:6.5',
                'org.springframework:spring-webmvc:3.0.5.RELEASE',
                'javax:javaee-api:6.0',
                'com.intellij:annotations:7.0.3',
                'com.intellij:openapi:7.0.3',
                'jdom:jdom:1.0'
    }

    tasks.withType( Compile ) {
        options.debug        =  true
        options.compilerArgs << '-Xlint:all'
    }

    tasks.withType( Jar ) {
        excludes << 'teamcity-plugin.xml'
        doLast {
            def tempFile = File.createTempFile( project.name, null )
            tempFile.write( new File( projectDir, 'src/main/resources/teamcity-plugin.xml' ).text.
                            replaceAll( '@name@', project.name ).replaceAll( '@version@', version ))
            
            ant.zip( destfile: destinationZip ) {
                zipfileset( file: archivePath, fullpath: "server/${project.name}.jar"  )
                zipfileset( file: tempFile,    fullpath: 'teamcity-plugin.xml' )
            }
            tempFile.delete()
        }
    }

    task deploy << {
        assert teamCityZip.delete()
        assert new File( teamCityDir, "webapps/ROOT/WEB-INF/plugins/.unpacked/${project.name}" ).deleteDir()
        assert new File( teamCityDir, "webapps/ROOT/plugins/${project.name}" ).deleteDir()
        assert new File( teamCityDir, "work/Catalina/localhost/_/TC_${project.name}" ).deleteDir()
        ant.copy( file : destinationZip, tofile : teamCityZip )
    }

    ideaProject.javaVersion = '1.6.0_25'
    ideaModule {
        javaVersion     = ideaProject.javaVersion
        downloadSources = true
        downloadJavadoc = true
        outputDir       = new File( project.buildDir, 'idea' )
        testOutputDir   = new File( project.buildDir, 'idea/test' )
    }

    test {
        test.testReportDir    = new File(( File ) project.buildDir, 'test/reports' )
        test.testResultsDir   = new File(( File ) project.buildDir, 'test/results' )
    }
}